"use strict";function setCommand(a){function b(){d.textContent+=s[0],a=s.slice(1),f--,0<f&&setTimeout(b,150)}function c(){d.textContent=d.textContent.slice(0,-1),e--,0<e?setTimeout(c,150):setTimeout(b,150)}var d=document.getElementById("header-command"),e=d.textContent.length,f=a.length;setTimeout(c,150)}document.addEventListener("DOMContentLoaded",function(){var a=document.getElementById("header-login");document.getElementById("header-toggle").addEventListener("click",function(){this.classList.contains("active")?(this.classList.remove("active"),a.classList.remove("active")):(this.classList.add("active"),a.classList.add("active"))})});
"use strict";function debounce(a,b,c){var d;return function(){var f=this,g=arguments;clearTimeout(d),d=setTimeout(function(){d=null,c||a.apply(f,g)},b),c&&!d&&a.apply(f,g)}}document.addEventListener("DOMContentLoaded",function(){for(var a=document.getElementsByClassName("preview-area"),b=function _loop(c){var d=a[c],f=d.parentNode.getElementsByTagName("textarea")[0];f.addEventListener("keyup",debounce(function(){var g=new XMLHttpRequest;g.responseType="document",g.open("POST","/preview_markdown",!0),g.addEventListener("readystatechange",function(){if(4==g.readyState)if(200==g.status){d.lastChild.innerHTML=g.responseXML.firstElementChild.lastChild.innerHTML,renderMathInElement(d.lastChild);for(var j=d.lastChild.getElementsByTagName("pre"),k=0;k<j.length;k++)hljs.highlightBlock(j[k])}else console.error(g.statusText)}),g.send(f.value)},200))},c=0;c<a.length;c++)b(c)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci5qcyIsInByZXZpZXcuanMiXSwibmFtZXMiOlsic2V0Q29tbWFuZCIsImNtZCIsInRleHRDb250ZW50IiwicyIsInNsaWNlIiwic2V0VGltZW91dCIsImFwcGVuZCIsImRlbGV0ZV8iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwibGVuZ3RoIiwibmV3X2NtZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInJlbW92ZSIsImxvZ2luIiwiYWRkIiwiZGVib3VuY2UiLCJhcmd1bWVudHMiLCJjbGVhclRpbWVvdXQiLCJ0aW1lb3V0IiwiaW1tZWRpYXRlIiwiZnVuYyIsImFwcGx5IiwiY29udGV4dCIsImFyZ3MiLCJ3YWl0IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInByZXZpZXdzIiwiaSIsInByZXZpZXciLCJwYXJlbnROb2RlIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJzb3VyY2UiLCJYTUxIdHRwUmVxdWVzdCIsInhociIsInJlc3BvbnNlVHlwZSIsIm9wZW4iLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwibGFzdENoaWxkIiwiaW5uZXJIVE1MIiwicmVzcG9uc2VYTUwiLCJmaXJzdEVsZW1lbnRDaGlsZCIsInJlbmRlck1hdGhJbkVsZW1lbnQiLCJjb2RlYmxvY2tzIiwiaGxqcyIsImhpZ2hsaWdodEJsb2NrIiwiY29uc29sZSIsImVycm9yIiwic3RhdHVzVGV4dCIsInNlbmQiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6ImFBQUEsUUFBU0EsV0FBVCxHQUE2QixDQUt6QixZQUFrQixDQUNkQyxFQUFJQyxXQUFKLEVBQW1CQyxFQUFFLENBQUYsQ0FETCxDQUVkLEVBQVVBLEVBQUVDLEtBQUYsQ0FBUSxDQUFSLENBRkksQ0FHZCxHQUhjLENBS0UsQ0FBWixFQUxVLEVBTVZDLFdBQVdDLENBQVgsQ0FBbUIsR0FBbkIsQ0FFUCxDQUVELFlBQW1CLENBQ2ZMLEVBQUlDLFdBQUosQ0FBa0JELEVBQUlDLFdBQUos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QUFJZ0IsSUFBSixDQUFTbEIsRUFBT21CLEtBQWhCLENBQ0gsQ0EzQmdDLENBMkI5QixHQTNCOEIsQ0FBakMsQ0FMQyxFQUFJLEVBQUksQ0FBYixDQUFnQnZCLEVBQUlELEVBQVNuQixNQUE3QixDQUFxQyxHQUFyQyxHQUFTb0IsQ0FBVCxDQWtDSCxDQXBDRCIsImZpbGUiOiJhbGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzZXRDb21tYW5kKG5ld19jbWQpIHtcbiAgICBsZXQgY21kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJoZWFkZXItY29tbWFuZFwiKTtcbiAgICB2YXIgdG9fZGVsZXRlID0gY21kLnRleHRDb250ZW50Lmxlbmd0aDtcbiAgICB2YXIgdG9fYXBwZW5kID0gbmV3X2NtZC5sZW5ndGg7XG5cbiAgICBmdW5jdGlvbiBhcHBlbmQoKSB7XG4gICAgICAgIGNtZC50ZXh0Q29udGVudCArPSBzWzBdO1xuICAgICAgICBuZXdfY21kID0gcy5zbGljZSgxKTtcbiAgICAgICAgdG9fYXBwZW5kLS07XG5cbiAgICAgICAgaWYgKHRvX2FwcGVuZCA+IDApIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoYXBwZW5kLCAxNTApO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGRlbGV0ZV8oKSB7XG4gICAgICAgIGNtZC50ZXh0Q29udGVudCA9IGNtZC50ZXh0Q29udGVudC5zbGljZSgwLCAtMSk7XG4gICAgICAgIHRvX2RlbGV0ZS0tO1xuXG4gICAgICAgIGlmICh0b19kZWxldGUgPiAwKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGRlbGV0ZV8sIDE1MCk7XG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoYXBwZW5kLCAxNTApO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHNldFRpbWVvdXQoZGVsZXRlXywgMTUwKTtcbn1cblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24gKCkge1xuICAgIGxldCBsb2dpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaGVhZGVyLWxvZ2luXCIpO1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJoZWFkZXItdG9nZ2xlXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmNsYXNzTGlzdC5jb250YWlucyhcImFjdGl2ZVwiKSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgbG9naW4uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIGxvZ2luLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuIiwiZnVuY3Rpb24gZGVib3VuY2UoZnVuYywgd2FpdCwgaW1tZWRpYXRlKSB7XG4gICAgdmFyIHRpbWVvdXQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY29udGV4dCA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgIGlmICghaW1tZWRpYXRlKSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICB9LCB3YWl0KTtcbiAgICAgICAgaWYgKGltbWVkaWF0ZSAmJiAhdGltZW91dCkgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICB9O1xufVxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHByZXZpZXdzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInByZXZpZXctYXJlYVwiKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByZXZpZXdzLmxlbmd0aDsgaSsrKVxuICAgIHtcbiAgICAgICAgbGV0IHByZXZpZXcgPSBwcmV2aWV3c1tpXTtcblxuICAgICAgICBsZXQgc291cmNlID0gcHJldmlldy5wYXJlbnROb2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidGV4dGFyZWFcIilbMF07XG4gICAgICAgIHNvdXJjZS5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgZGVib3VuY2UoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdDtcbiAgICAgICAgICAgIHhoci5yZXNwb25zZVR5cGUgPSBcImRvY3VtZW50XCI7XG4gICAgICAgICAgICB4aHIub3BlbihcIlBPU1RcIiwgXCIvcHJldmlld19tYXJrZG93blwiLCB0cnVlKTtcblxuICAgICAgICAgICAgeGhyLmFkZEV2ZW50TGlzdGVuZXIoXCJyZWFkeXN0YXRlY2hhbmdlXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09IDQpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA9PSAyMDApXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpZXcubGFzdENoaWxkLmlubmVySFRNTCA9IHhoci5yZXNwb25zZVhNTC5maXJzdEVsZW1lbnRDaGlsZC5sYXN0Q2hpbGQuaW5uZXJIVE1MO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVuZGVyTWF0aEluRWxlbWVudChwcmV2aWV3Lmxhc3RDaGlsZCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2RlYmxvY2tzID0gcHJldmlldy5sYXN0Q2hpbGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJwcmVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvZGVibG9ja3MubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGxqcy5oaWdobGlnaHRCbG9jayhjb2RlYmxvY2tzW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoeGhyLnN0YXR1c1RleHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHhoci5zZW5kKHNvdXJjZS52YWx1ZSk7XG4gICAgICAgIH0sIDIwMCkpO1xuICAgIH1cbn0pO1xuIl19
